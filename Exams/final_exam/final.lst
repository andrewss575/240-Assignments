     1                                 %line 1+1 final.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 
    39                                 
    40                                 
    41                                 
    42                                 
    43                                 
    44                                 
    45                                 
    46                                 
    47                                 
    48                                 
    49                                 
    50                                 
    51                                 
    52                                 
    53                                 
    54                                 
    55                                 
    56                                 
    57                                 
    58                                 
    59                                 
    60                                 
    61                                 
    62                                 
    63                                 
    64                                 %line 70+1 final.asm
    65                                 
    66                                 %line 78+1 final.asm
    67                                 
    68                                 [section .data]
    69 00000000 496E70757420317374-     msg1 db "Input 1st Number (0-9): "
    70 00000000 204E756D6265722028-
    71 00000000 302D39293A20       
    72 00000018 496E70757420326E64-     msg2 db "Input 2nd Number (0-9): "
    73 00000018 204E756D6265722028-
    74 00000018 302D39293A20       
    75 00000030 4D756C7469706C6963-     msg3 db "Multiplication result : "
    76 00000030 6174696F6E20726573-
    77 00000030 756C74203A20       
    78 00000048 30300A                  ascii db "00", 10
    79                                 
    80                                 [section .bss]
    81 00000000 <gap>                   buffer resb 2
    82 00000002 <gap>                   num1 resb 1
    83 00000003 <gap>                   num2 resb 1
    84 00000004 <gap>                   result resb 1
    85                                 
    86                                 [section .text]
    87                                 [global _start]
    88                                 
    89                                 _start:
    90 00000000 48C7C3[00000000]        mov rbx, msg1
    91 00000007 E8B5000000              call toNumber
    92 0000000C 880425[00000000]        mov byte[num1], al
    93                                 
    94 00000013 48C7C3[00000000]        mov rbx, msg2
    95 0000001A E8A2000000              call toNumber
    96 0000001F 880425[00000000]        mov byte[num2], al
    97                                 
    98 00000026 8A0425[00000000]        mov al, byte[num1]
    99 0000002D 8A1C25[00000000]        mov bl, byte[num2]
   100 00000034 E8E1000000              call multiplication
   101 00000039 880425[00000000]        mov byte[result], al
   102                                 
   103 00000040 668B3C25[00000000]      mov di, word[result]
   104 00000048 E8D4000000              call toAscii
   105                                 
   106 0000004D 66833C25[00000000]-     cmp word[result], 10
   107 0000004D 0A                 
   108 00000056 48C7C001000000          mov rax, 1
   109                                 %line 112+0 final.asm
   110 0000005D 48C7C701000000          mov rdi, 1
   111 00000064 48C7C6[00000000]        mov rsi, msg3
   112 0000006B 48C7C218000000          mov rdx, 24
   113 00000072 0F05                    syscall
   114                                 %line 113+1 final.asm
   115                                 
   116 00000074 7C1E                    jl one_dig
   117                                 
   118 00000076 48C7C001000000          mov rax, 1
   119                                 %line 116+0 final.asm
   120 0000007D 48C7C701000000          mov rdi, 1
   121 00000084 48C7C6[00000000]        mov rsi, ascii
   122 0000008B 48C7C203000000          mov rdx, 3
   123 00000092 0F05                    syscall
   124                                 %line 117+1 final.asm
   125 00000094 EB1E                    jmp end
   126                                 
   127                                  one_dig:
   128 00000096 48C7C001000000          mov rax, 1
   129                                 %line 120+0 final.asm
   130 0000009D 48C7C701000000          mov rdi, 1
   131 000000A4 48C7C6[01000000]        mov rsi, ascii+1
   132 000000AB 48C7C202000000          mov rdx, 2
   133 000000B2 0F05                    syscall
   134                                 %line 121+1 final.asm
   135 000000B4 EBFE                    jmp end
   136                                 
   137                                  end:
   138 000000B6 48C7C03C000000          mov rax, 60
   139 000000BD 48C7C700000000          mov rdi, 0
   140 000000C4 0F05                    syscall
   141                                 
   142                                 
   143                                 
   144                                 toNumber:
   145 000000C6 48C7C001000000          mov rax, 1
   146                                 %line 131+0 final.asm
   147 000000CD 48C7C701000000          mov rdi, 1
   148 000000D4 4889DE                  mov rsi, rbx
   149 000000D7 48C7C218000000          mov rdx, 24
   150 000000DE 0F05                    syscall
   151                                 %line 132+1 final.asm
   152 000000E0 48C7C000000000          mov rax, 0
   153                                 %line 132+0 final.asm
   154 000000E7 48C7C700000000          mov rdi, 0
   155 000000EE 48C7C6[00000000]        mov rsi, buffer
   156 000000F5 48C7C202000000          mov rdx, 2
   157 000000FC 0F05                    syscall
   158                                 %line 133+1 final.asm
   159                                 
   160 000000FE 803C25[00000000]30      cmp byte[buffer], 0x30
   161 00000106 7CBC                    jl toNumber
   162 00000108 803C25[00000000]39      cmp byte[buffer], 0x39
   163 00000110 7FB2                    jg toNumber
   164                                 
   165 00000112 8A0C25[00000000]        mov cl, byte[buffer]
   166 00000119 80E10F                  and cl, 0x0f
   167 0000011C 88C8                    mov al, cl
   168 0000011E C3                      ret
   169                                 
   170                                 
   171                                 
   172                                 multiplication:
   173 0000011F 660FB6C0                movzx ax, al
   174 00000123 F6E3                    mul bl
   175 00000125 C3                      ret
   176                                 
   177                                 
   178                                 
   179                                 toAscii:
   180 00000126 6689F8                  mov ax, di
   181 00000129 66BB0A00                mov bx, 10
   182 0000012D 48C7C101000000          mov rcx, 1
   183                                 next2:
   184 00000134 66BA0000                mov dx, 0
   185 00000138 66F7F3                  div bx
   186 0000013B 0091[00000000]          add byte[ascii+rcx], dl
   187 00000141 66FFC9                  dec cx
   188 00000144 6683F900                cmp cx, 0
   189 00000148 7DE8                    jge next2
   190 0000014A C3                      ret
