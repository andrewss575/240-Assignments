     1                                 %line 1+1 cin.asm
     2                                 
     3                                 
     4                                 [section .data]
     5 00000000 506C6561736520456E-     prompt db "Please Enter Your Username: "
     6 00000000 74657220596F757220-
     7 00000000 557365726E616D653A-
     8 00000000 20                 
     9 0000001C 48656C6C6F2C20          hello db "Hello, "
    10 00000023 210A                    newline db "!", 10
    11 00000025 3030                    old_age db "00"
    12 00000027 486F77206F6C642061-     age_prompt db "How old are you? (2 digit number): "
    13 00000027 726520796F753F2028-
    14 00000027 32206469676974206E-
    15 00000027 756D626572293A20   
    16 0000004A 576F772C20696E2031-     age_response db "Wow, in 10 years, you will be "
    17 0000004A 302079656172732C20-
    18 0000004A 796F752077696C6C20-
    19 0000004A 626520             
    20                                 
    21                                 [section .bss]
    22 00000000 <gap>                   username resb 7
    23 00000007 <gap>                   age resb 3
    24                                 
    25                                 [section .text]
    26                                 [global _start]
    27                                 
    28                                 _start:
    29                                 
    30 00000000 48C7C001000000          mov rax, 1
    31 00000007 48C7C701000000          mov rdi, 1
    32 0000000E 48C7C6[00000000]        mov rsi, prompt
    33 00000015 48C7C21C000000          mov rdx, 28
    34 0000001C 0F05                    syscall
    35                                 
    36                                 
    37 0000001E 48C7C000000000          mov rax, 0
    38 00000025 48C7C700000000          mov rdi, 0
    39 0000002C 48C7C6[00000000]        mov rsi, username
    40 00000033 48C7C207000000          mov rdx, 7
    41 0000003A 0F05                    syscall
    42                                 
    43                                 
    44 0000003C 48C7C001000000          mov rax, 1
    45 00000043 48C7C701000000          mov rdi, 1
    46 0000004A 48C7C6[00000000]        mov rsi, hello
    47 00000051 48C7C207000000          mov rdx, 7
    48 00000058 0F05                    syscall
    49                                 
    50                                 
    51 0000005A 48C7C001000000          mov rax, 1
    52 00000061 48C7C701000000          mov rdi, 1
    53 00000068 48C7C6[00000000]        mov rsi, username
    54 0000006F 48C7C206000000          mov rdx, 6
    55 00000076 0F05                    syscall
    56                                 
    57                                 
    58 00000078 48C7C001000000          mov rax, 1
    59 0000007F 48C7C701000000          mov rdi, 1
    60 00000086 48C7C6[00000000]        mov rsi, newline
    61 0000008D 48C7C202000000          mov rdx, 2
    62 00000094 0F05                    syscall
    63                                 
    64                                 
    65 00000096 48C7C001000000          mov rax, 1
    66 0000009D 48C7C701000000          mov rdi, 1
    67 000000A4 48C7C6[00000000]        mov rsi, age_prompt
    68 000000AB 48C7C223000000          mov rdx, 35
    69 000000B2 0F05                    syscall
    70                                 
    71                                 
    72 000000B4 48C7C000000000          mov rax, 0
    73 000000BB 48C7C700000000          mov rdi, 0
    74 000000C2 48C7C6[00000000]        mov rsi, age
    75 000000C9 48C7C203000000          mov rdx, 3
    76 000000D0 0F05                    syscall
    77                                 
    78                                 
    79 000000D2 8A0425[00000000]        mov al, byte[age]
    80 000000D9 240F                    and al, 0f
    81 000000DB FEC0                    inc al
    82 000000DD 000425[00000000]        add byte[old_age], al
    83                                 
    84 000000E4 8A0425[01000000]        mov al, byte[age + 1]
    85 000000EB 240F                    and al, 0f
    86 000000ED 000425[01000000]        add byte[old_age + 1], al
    87                                 
    88                                 
    89                                 
    90 000000F4 48C7C001000000          mov rax, 1
    91 000000FB 48C7C701000000          mov rdi, 1
    92 00000102 48C7C6[00000000]        mov rsi, age_response
    93 00000109 48C7C21E000000          mov rdx, 30
    94 00000110 0F05                    syscall
    95                                 
    96                                 
    97 00000112 48C7C001000000          mov rax, 1
    98 00000119 48C7C701000000          mov rdi, 1
    99 00000120 48C7C6[00000000]        mov rsi, old_age
   100 00000127 48C7C202000000          mov rdx, 2
   101 0000012E 0F05                    syscall
   102                                 
   103                                 
   104 00000130 48C7C001000000          mov rax, 1
   105 00000137 48C7C701000000          mov rdi, 1
   106 0000013E 48C7C6[00000000]        mov rsi, newline
   107 00000145 48C7C202000000          mov rdx, 2
   108 0000014C 0F05                    syscall
   109                                 
   110                                 
   111 0000014E 48C7C03C000000          mov rax, 60
   112 00000155 48C7C700000000          mov rdi, 0
   113 0000015C 0F05                    syscall
